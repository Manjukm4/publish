@model Tuple<string, List<DBLibrary.AccessLogResult>>
<!-- Modal content-->
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.css">

<style>
    #JD_Table {
        background-color: #337ab7;
        border-color: #337ab7;
    }

        #JD_Table th {
            color: white;
            border-color: white;
        }

        #JD_Table td {
            color: black;
            border-color: #337ab7;
            padding-left: 18px;
        }

        #JD_Table TH {
            white-space: nowrap;
        }



    .textCapitalize {
        text-transform: capitalize;
    }

    #divModel li a {
        color: #337ab7;
    }



    #divModel .active a {
        background-color: #fff !important;
    }


    #tdCompany {
        background-color: #337ab7;
        border-color: #337ab7;
    }

        #tdCompany th {
            color: white;
            border-color: white;
        }

            #tdCompany th select {
                color: black;
                border-color: white;
            }

        #tdCompany td {
            color: black;
            border-color: #337ab7;
            padding-left: 18px;
        }
</style>


<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h3 style="text-align: center;" class="modal-title">@Model.Item1</h3>
    </div>


    <div id="divModel" class="modal-body">
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#menu1">Access Log Details</a></li>
            @*<li><a data-toggle="tab" href="#menu2" style="">Detailed</a></li>
                <li><a data-toggle="tab" href="#menu3">By Employee</a></li>*@
        </ul>
        <br />

        <div >
            <div class="form-group col-md-12">

                

            </div>
        </div>


        <div class="tab-content">
            <div>
                <b> Category:</b>

                <select id="table-filter" name="dropDownSelect">
                    <option value="">All</option>
                </select>
            </div>

            <br />
            <div id="menu1" class="tab-pane fade in active">

                <table id="tdCompany" class="table-striped">
                    <thead class="thead-dark">
                        <tr>
                            <th>Emp Code</th>
                            @*<th>Employee Name</th>*@
                            <th>Category</th>
                            <th>Create Date</th>
                            <th>Descripton</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Item2)
                        {
                            <tr>
                                <td>@Html.DisplayFor(model => item.RC_Emp_Cd)</td>
                                @*<td>@item.RE_Employee_Name</td>*@
                                <td class="textCapitalize">@item.Category</td>
                                <td>@item.RC_Date</td>
                                <td>@item.RC_Description</td>
                            </tr>
                        }

                    </tbody>

                </table>
            </div>

        </div>
    </div>
    <div class="modal-footer">
        @*<label style="float: left; font-size: larger;color: darkorange;">Total  @ViewBag.empTblHeaderText : @Model.Item2.Sum(s => s.CategoryCount) </label>*@
        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
    </div>

</div>


<script>
    $(document).ready(function () {

        if ('@User.IsInRole(System.Configuration.ConfigurationManager.AppSettings["DirectorRole"])' == 'True' || '@User.IsInRole(System.Configuration.ConfigurationManager.AppSettings["StaffingDirector"])' == 'True') {
            $.fn.tableExport.xlsx = {
                defaultClass: "xlsx",
                buttonContent: "Export to xlsx",
                mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                fileExtension: ".xlsx",
               charset : "charset=utf-8"
            };
            $.fn.tableExport.csv = {
                defaultClass: "csv",
                buttonContent: "Export to csv",
                separator: ",",
                mimeType: "application/csv",
                fileExtension: ".csv"
            };


            $('#JD_Table').tableExport({
                headings: true,                    // (Boolean), display table headings (th/td elements) in the <thead>
                footers: false,                     // (Boolean), display table footers (th/td elements) in the <tfoot>
                formats: ["xlsx","csv"],    // (String[]), filetypes for the export
                fileName: "@Model.Item2 AccessLog",                    // (id, String), filename for the downloaded file
                bootstrap: true,                   // (Boolean), style buttons using bootstrap
                position: "bottom",                 // (top, bottom), position of the caption element relative to table
                ignoreRows: null,                  // (Number, Number[]), row indices to exclude from the exported file(s)
                ignoreCols: null,                  // (Number, Number[]), column indices to exclude from the exported file(s)
                //ignoreCSS: ".tableexport-ignore",  // (selector, selector[]), selector(s) to exclude from the exported file(s)
                // emptyCSS: ".tableexport-empty",    // (selector, selector[]), selector(s) to replace cells with an empty string in the exported file(s)
                trimWhitespace: true              // (Boolean), remove all leading/trailing newlines, spaces, and tabs from cell text in the exported file(s)

            });
            @*$('#tblUser').tableExport({
                headings: true,                    // (Boolean), display table headings (th/td elements) in the <thead>
                footers: false,                     // (Boolean), display table footers (th/td elements) in the <tfoot>
                formats: ["xlsx","csv"],                   // (String[]), filetypes for the export
                fileName: "@Model.Item1 By Employee",                    // (id, String), filename for the downloaded file
                bootstrap: true,                   // (Boolean), style buttons using bootstrap
                position: "bottom",                 // (top, bottom), position of the caption element relative to table
                ignoreRows: null,                  // (Number, Number[]), row indices to exclude from the exported file(s)
                ignoreCols: null,                  // (Number, Number[]), column indices to exclude from the exported file(s)
                trimWhitespace: false              // (Boolean), remove all leading/trailing newlines, spaces, and tabs from cell text in the exported file(s)

            });
            $('#tdCompany').tableExport({
                headings: true,                    // (Boolean), display table headings (th/td elements) in the <thead>
                footers: false,                     // (Boolean), display table footers (th/td elements) in the <tfoot>
                formats: ["xlsx", "csv"],    // (String[]), filetypes for the export
                fileName: "@Model.Item1 Consolidated ",                    // (id, String), filename for the downloaded file
                bootstrap: true,                   // (Boolean), style buttons using bootstrap
                position: "bottom",                 // (top, bottom), position of the caption element relative to table
                ignoreRows: null,                  // (Number, Number[]), row indices to exclude from the exported file(s)
                ignoreCols: null,                  // (Number, Number[]), column indices to exclude from the exported file(s)
                trimWhitespace: true              // (Boolean), remove all leading/trailing newlines, spaces, and tabs from cell text in the exported file(s)

            });*@
        }
        $('#JD_Table').DataTable({
           RC_Date: [["asc"]]
        });

        //$('#tblUser').DataTable({
        //    "order": [[1, "asc"]]
        //});
        @*var selist[]=@Model.Item2;
        $.each(selist, function (data, value) {

            $("select").append($("<option></option>").val(value.Category).html(value.Category));
    })*@
        var table = $("#tdCompany").DataTable({
            "searching": true,
            "order": [[1, "asc"]],
            dom: 'lrftip',
            initComplete: function () {
                $('.dataTables_filter input[type="search"]').css(
                    { 'text-transform': 'capitalize' }
                );
                this.api().columns([1]).every(function () {
                    var column = this;
                    var select = $('#table-filter');
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="' + d + '">' + d + '</option>')
                    });
                })
            }
        });
        var option = '@ViewBag.dropDetails';
       // $("#table-filter").val(option);
        var selectDropdown = $('#table-filter');
        selectDropdown.on('change', function () {
            table.search(this.value).draw();
        });
        
        selectDropdown.val(option).addClass('textCapitalize');
        selectDropdown.trigger('change');

        
        $('option').addClass('textCapitalize');
       // $('#cat').addClass('textCapitalize');
            //"initComplete": function () {
            //    this.api().columns([1]).every(function () {
            //        var column = this;
            //        var select = $('<select><option value="All">Category</option></select>')
            //            .appendTo($(column.header()).empty())
            //            .on('change', function () {
            //                var val = $.fn.dataTable.util.escapeRegex(
            //                    $(this).val()
            //                );
            //                if (val === "All") {
            //                    val = '';
            //                }
            //                column
            //                    .search(val ? '^' + val + '$' : '', true, false)
            //                    .draw();
            //            });

            //        column.data().unique().sort().each(function (d, j) {
            //            select.append('<option value="' + d + '">' + d + '</option>')
            //        });
            //       // column.data().sort().select.appendTo('<option value="' + All + '">' + All + '</option>');
            //    });
            //}
       // });

    });
</script>
