@model Tuple<List<RIC.Models.MonthlyTarget.MonthlyTargetsEmployeeSupervisor>, bool, string, int>

<div class="tablediv" style="height:auto">

    <table id="UserList" class="table table-striped  table-hover table-bordered table-fixed">
        <thead class="theadStyle">
            <tr>

                <td class="tableHead text-center" style="width: 10%">
                    <label>Employee ID</label>
                </td>
                <td class="tableHead text-center" style="width: 14%">
                    <label>Employee Name</label>
                </td>
                <td class="tableHead text-center" style="width: 6%">
                    <label>Margin</label>
                </td>

                <td class="tableHead text-center" style="width: 6%">
                    <label>Submissions</label>
                </td>
                <td class="tableHead text-center" style="width: 6%">
                    <label>Interviews</label>
                </td>
                <td class="tableHead text-center" style="width: 6%">
                    <label>Hires</label>
                </td>
                <td class="tableHead text-center" style="width: 17%">
                    <label>Team Comments</label><br />
                    <i class='fas fa-comments' style='font-size:24px' title="Please enter the support needed from team to achieve the goals"></i>
                </td>
                <td class="tableHead text-center" style="width: 17%">
                    <label>Supervisor Comments</label><br />
                    <i class='fas fa-comments' style='font-size:24px' title="Please enter the support needed from supervisor to achieve the goals"></i>
                </td>
                <td class="tableHead text-center" style="width: 10%">
                    <label>Status</label>
                </td>
                <td class="text-center" style="width: 8%">
                    <label>Action</label>
                </td>
            </tr>
        </thead>


        <tbody>

            @foreach (var item in Model.Item1)
            {
                using (Html.BeginForm("AcceptTargetsByStaffingDirector", "MonthlyTarget", FormMethod.Post))

                {
                    if (Model.Item2 == false)
                    {

                        <tr>

                            <td class="text-center">
                                @Html.TextBox("Emp_Cd", item.Emp_Cd, new { disabled = "true", style = "width:100px;" })
                                <input type="hidden" name="Month" value="@Model.Item3" />
                                <input type="hidden" name="Year" value="@Model.Item4" />

                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.TextBox("Emp_Name", item.Emp_Name, new { disabled = "true", style = "width:190px;" })
                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.TextBox("Margin", item.Margin, new { style = "width:70px;", @class = "margin" })
                            </td>

                            <td class="text-center">


                                @Html.TextBox("SubmissionTarget", item.SubmissionTarget, new { required = "required", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextBox("InterviewTarget", item.InterviewTarget, new { required = "required", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextBox("HireTarget", item.HireTarget, new { required = "required", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextArea("Team_Comments", item.Team_Comments, new { @class = "form-control input-sm chat-input chkEdit" })

                            </td>
                            <td class="text-center">

                                @Html.TextArea("Supervisor_Comments", item.Supervisor_Comments, new { @class = "form-control input-sm chat-input chkEdit" })

                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.Label("Status", item.Status)
                            </td>


                            <td class="text-center">

                                @Html.AntiForgeryToken()
                                <input type="hidden" name="Emp_Cd" value="@item.Emp_Cd" />
                                <input type="hidden" name="Emp_Name" value="@item.Emp_Name" />


                                @if (item.Status == "Accepted")
                                {
                                    <input name="updatedata" id="update" value="Update" type="submit" class="btn btn-primary btn-block" />


                                }
                                else if (item.Status == "Pending")
                                {
                                    <input name="savedata" id="savedata" value="Save" type="submit" class="btn btn-primary btn-block" />

                                }
                                else /*if(item.Status == "Submitted")*/
                                {
                                    <input name="Approve" id="Approve" value="Approve" type="submit" class="btn btn-primary btn-block" />

                                }


                            </td>

                        </tr>
                    }
                    else
                    {
                        <tr>

                            <td class="text-center">
                                @Html.TextBox("Emp_Cd", item.Emp_Cd, new { disabled = "true", style = "width:100px;" })
                                <input type="hidden" name="Month" value="@Model.Item3" />
                                <input type="hidden" name="Year" value="@Model.Item4" />

                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.TextBox("Emp_Name", item.Emp_Name, new { disabled = "true", style = "width:190px;" })
                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.TextBox("Margin", item.Margin, new { disabled = "true", style = "width:70px;", @class = "margin" })
                            </td>

                            <td class="text-center">


                                @Html.TextBox("SubmissionTarget", item.SubmissionTarget, new { required = "required", disabled = "true", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextBox("InterviewTarget", item.InterviewTarget, new { required = "required", disabled = "true", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextBox("HireTarget", item.HireTarget, new { required = "required", disabled = "true", style = "width:70px;" })

                            </td>
                            <td class="text-center">

                                @Html.TextArea("Team_Comments", item.Team_Comments, new { @class = "form-control input-sm chat-input chkEdit", disabled = "true" })

                            </td>
                            <td class="text-center">

                                @Html.TextArea("Supervisor_Comments", item.Supervisor_Comments, new { @class = "form-control input-sm chat-input chkEdit", disabled = "true" })

                            </td>
                            <td class="text-center">
                                @*@Html.DisplayFor(m => m.Emp_Name)*@
                                @Html.Label("Status", item.Status, new { disabled = "true" })
                            </td>


                            <td class="text-center">

                                @Html.AntiForgeryToken()
                                <input type="hidden" name="Emp_Cd" value="@item.Emp_Cd" />
                                <input type="hidden" name="Emp_Name" value="@item.Emp_Name" />


                                @if (item.Status == "Accepted")
                                {
                                    <input name="submit" id="update" value="Update" type="submit" class="btn btn-primary btn-block" disabled />



                                }
                                else if (item.Status == "Pending")
                                {
                                    <input name="submit" id="savedata" value="Save" type="submit" class="btn btn-primary btn-block" disabled />

                                }
                                else if (item.Status == "Submitted")
                                {
                                    <input name="Approve" id="Approve" value="Approve" type="submit" class="btn btn-primary btn-block" disabled />

                                }


                            </td>

                        </tr>

                    }
                }


            }

        </tbody>
    </table>

</div>